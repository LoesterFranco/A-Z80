					IO Pins	Sequencer									
// Regular instructions															
#if 	pla[97]		di/ei			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:F3  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[95]		halt			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:76  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[92]		scf			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:37  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[89]		ccf			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:3F  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[81]		cpl			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:2F  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[77]		daa			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:27  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[69]		"add hl,ss"			"4,4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:09  M1      MREQ RD                    | Opcode read from 000 -> 09															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:000 DB:--                                     | 															
#006H T6  AB:000 DB:--                                     | 															
#007H T7  AB:000 DB:--                                     | 															
#008H T8  AB:000 DB:--                                     | 						nextM									
#009H T9  AB:000 DB:--                                     | 															
#010H T10 AB:000 DB:--                                     | 															
#011H T11 AB:000 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[66] && !(pla[53] || pla[105])		inc/dec r			4									
"// PLA75 is set for decrement and reset for increment. Route that line for SBC/ADC ALU operation to perform a decrement or increment. Since the timings are the same, we use a single PLA entry for both functions."															
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:05  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[65]&& !(pla[52] || pla[104])		"add/sub/and/or/xor/cmp a,r"			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:80  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[64]		"add/sub/and/or/xor/cmp a,n"			"4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C6  M1      MREQ RD                    | Opcode read from 000 -> C6															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM;setM1									
#end															
															
#if 	pla[61] && !(pla[59] || pla[103] || pla[58] || pla[102] || pla[95])		"ld r,r'"			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:05  M1      MREQ RD                    |															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       |															
#end															
															
#if 	pla[59] && !pla[95]		"ld (hl),r"			"4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:70  M1      MREQ RD                    | Opcode read from 000 -> 70															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMWrite										
#006H T6  AB:001 DB:01          MREQ                       | 					fMWrite										
#007H T7  AB:001 DB:01          MREQ    WR                 | Memory write to  001 <- 01					fMWrite	nextM;setM1									
#end															
															
#if 	pla[58] && !pla[95]		"ld r,(hl)"			"4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:46  M1      MREQ RD                    | Opcode read from 000 -> 46															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:003 DB:--                                     | 					fMRead										
#006H T6  AB:003 DB:03          MREQ RD                    | Memory read from 003 -> 03					fMRead										
#007H T7  AB:003 DB:03          MREQ RD                    | Memory read from 003 -> 03					fMRead	nextM;setM1									
#end															
															
#if 	pla[56]		rst			"5,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C7  M1      MREQ RD                    | Opcode read from 000 -> C7															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM1									
#005H T5  AB:000 DB:--                                     | 						nextM									
#006H T6  AB:000 DB:--                                     | 					fMWrite										
#007H T7  AB:000 DB:00          MREQ                       | 					fMWrite										
#008H T8  AB:000 DB:00          MREQ    WR                 | Memory write to  000 <- 00					fMWrite	nextM									
#009H T9  AB:0FF DB:--                                     | 					fMWrite										
#010H T10 AB:0FF DB:01          MREQ                       | 					fMWrite										
#011H T11 AB:0FF DB:01          MREQ    WR                 | Memory write to  0FF <- 01					fMWrite	nextM;setM1									
#end															
															
#if 	pla[53]		inc/dec (hl)			"4,4,3"									
"// PLA75 is set for decrement and reset for increment. Route that line for SBC/ADC ALU operation to perform a decrement or increment. Since the timings are the same, we use a single PLA entry for both functions."															
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:34  M1      MREQ RD                    | Opcode read from 000 -> 34															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#008H T8  AB:001 DB:--                                     | 						nextM									
#009H T9  AB:001 DB:--                                     | 					fMWrite										
#010H T10 AB:001 DB:02          MREQ                       | 					fMWrite										
#011H T11 AB:001 DB:02          MREQ    WR                 | Memory write to  001 <- 02					fMWrite	nextM;setM1									
#end															
															
#if 	pla[52]		add/sub/and/or/xor/cp (hl)			"4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:86  M1      MREQ RD                    | Opcode read from 000 -> 86															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM;setM1									
#end															
															
#if 	pla[51]		ED			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:ED  M1      MREQ RD                    | Opcode read from 000 -> ED															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
#if 	pla[50]		"ld (hl),n"			"4,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:36  M1      MREQ RD                    | Opcode read from 000 -> 36															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:001 DB:--                                     | 					fMWrite										
#009H T9  AB:001 DB:01          MREQ                       | 					fMWrite										
#010H T10 AB:001 DB:01          MREQ    WR                 | Memory write to  001 <- 01					fMWrite	nextM;setM1									
#end															
															
#if 	pla[48]		"jr ss,e"			"4,3,(5)"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:20  M1      MREQ RD                    | Opcode read from 000 -> 20															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM;setM1ss									
#008H T8  AB:001 DB:--                                     | 															
#009H T9  AB:001 DB:--                                     | 															
#010H T10 AB:001 DB:--                                     | 															
#011H T11 AB:001 DB:--                                     | 															
#012H T12 AB:001 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[47]		jr e			"4,3,5"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:18  M1      MREQ RD                    | Opcode read from 000 -> 18															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:001 DB:--                                     | 															
#009H T9  AB:001 DB:--                                     | 															
#010H T10 AB:001 DB:--                                     | 															
#011H T11 AB:001 DB:--                                     | 															
#012H T12 AB:001 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[45]		ret cc			"5,(3,3)"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C0  M1      MREQ RD                    | Opcode read from 000 -> C0															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM1									
#005H T5  AB:000 DB:--                                     | 						nextM;setM1cc									
#006H T6  AB:001 DB:--                                     | 					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#008H T8  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#009H T9  AB:002 DB:--                                     | 					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#011H T11 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM;setM1									
#end															
															
#if 	pla[43]		"jp cc,nn"			"4,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C2  M1      MREQ RD                    | Opcode read from 000 -> C2															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM;setM1									
#end															
															
#if 	pla[42]		"call cc,nn"			"4,3,3/4,(3,3)"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C4  M1      MREQ RD                    | Opcode read from 000 -> C4															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	setM1cc									
#011H T11 AB:002 DB:--                                     | 						nextM									
#012H T12 AB:000 DB:--                                     | 					fMWrite										
#013H T13 AB:000 DB:00          MREQ                       | 					fMWrite										
#014H T14 AB:000 DB:00          MREQ    WR                 | Memory write to  000 <- 00					fMWrite	nextM									
#015H T15 AB:0FF DB:--                                     | 					fMWrite										
#016H T16 AB:0FF DB:03          MREQ                       | 					fMWrite										
#017H T17 AB:0FF DB:03          MREQ    WR                 | Memory write to  0FF <- 03					fMWrite	nextM;setM1									
#end															
															
#if 	pla[39]		"ex af,af'"			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:08  M1      MREQ RD                    | Opcode read from 000 -> 08															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
#if 	pla[38] && pla[13]		"ld (nn),a"			"4,3,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:32  M1      MREQ RD                    | Opcode read from 000 -> 32															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM									
#011H T11 AB:001 DB:--                                     | 					fMWrite										
#012H T12 AB:001 DB:FE          MREQ                       | 					fMWrite										
#013H T13 AB:001 DB:FE          MREQ    WR                 | Memory write to  001 <- FE					fMWrite	nextM;setM1									
#end															
															
#if 	pla[38] && !pla[13]		"ld a,(nn)"			"4,3,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:3A  M1      MREQ RD                    | Opcode read from 000 -> 3A															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM									
#011H T11 AB:001 DB:--                                     | 					fMRead										
#012H T12 AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#013H T13 AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM;setM1									
#end															
															
#if 	pla[37] && pla[28]		"out (n),a"			"4,3,4"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:D3  M1      MREQ RD                    | Opcode read from 000 -> D3															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:001 DB:--                                     | 					fIOWrite										
#009H T9  AB:001 DB:03                  WR IORQ            | I/O write to 001 <- 03					fIOWrite										
#010H T10 AB:001 DB:03                  WR IORQ            | I/O write to 001 <- 03					fIOWrite										
#011H T11 AB:001 DB:03                  WR IORQ            | I/O write to 001 <- 03					fIOWrite	nextM;setM1									
#end															
															
#if 	pla[37] && !pla[28]		"in a,(n)"			"4,3,4"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:DB  M1      MREQ RD                    | Opcode read from 000 -> DB															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:001 DB:--                                     | 					fIORead										
#009H T9  AB:001 DB:--               RD    IORQ            | I/O read from 001					fIORead										
#010H T10 AB:001 DB:--               RD    IORQ            | I/O read from 001					fIORead										
#011H T11 AB:001 DB:--               RD    IORQ            | I/O read from 001					fIORead	nextM;setM1									
#end															
															
															
															
#if 	pla[35]		ret			"4,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C9  M1      MREQ RD                    | Opcode read from 000 -> C9															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:0FF DB:--                                     | 					fMRead										
#006H T6  AB:0FF DB:01          MREQ RD                    | Memory read from 0FF -> 01					fMRead										
#007H T7  AB:0FF DB:01          MREQ RD                    | Memory read from 0FF -> 01					fMRead	nextM									
#008H T8  AB:000 DB:--                                     | 					fMRead										
#009H T9  AB:000 DB:C9          MREQ RD                    | Memory read from 000 -> C9					fMRead										
#010H T10 AB:000 DB:C9          MREQ RD                    | Memory read from 000 -> C9					fMRead	nextM;setM1									
#end															
															
#if 	pla[30] && pla[13]		"ld (nn),hl"			"4,3,3,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:22  M1      MREQ RD                    | Opcode read from 000 -> 22															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM									
#011H T11 AB:001 DB:--                                     | 					fMWrite										
#012H T12 AB:001 DB:01          MREQ                       | 					fMWrite										
#013H T13 AB:001 DB:01          MREQ    WR                 | Memory write to  001 <- 01					fMWrite	nextM									
#014H T14 AB:002 DB:--                                     | 					fMWrite										
#015H T15 AB:002 DB:02          MREQ                       | 					fMWrite										
#016H T16 AB:002 DB:02          MREQ    WR                 | Memory write to  002 <- 02					fMWrite	nextM;setM1									
#end															
															
#if 	pla[30] && !pla[13]		"ld hl,(nn)"			"4,3,3,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:2A  M1      MREQ RD                    | Opcode read from 000 -> 2A															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM									
#011H T11 AB:001 DB:--                                     | 					fMRead										
#012H T12 AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#013H T13 AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#014H T14 AB:002 DB:--                                     | 					fMRead										
#015H T15 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#016H T16 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM;setM1									
#end															
															
#if 	pla[29]		jp nn			"4,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C3  M1      MREQ RD                    | Opcode read from 000 -> C3															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM;setM1									
#end															
															
#if 	pla[26]		djnz e			"5,3,(5)"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:10  M1      MREQ RD                    | Opcode read from 000 -> 10															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM1									
#005H T5  AB:000 DB:--                                     | 						nextM									
#006H T6  AB:001 DB:--                                     | 					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#008H T8  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM;setM1bz									
#009H T9  AB:001 DB:--                                     | 															
#010H T10 AB:001 DB:--                                     | 															
#011H T11 AB:001 DB:--                                     | 															
#012H T12 AB:001 DB:--                                     | 															
#013H T13 AB:001 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[25]		rlca/rla/rrca/rra			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:07  M1      MREQ RD                    | Opcode read from 000 -> 07															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
#if 	pla[24]		call nn			"4,3,4,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:CD  M1      MREQ RD                    | Opcode read from 000 -> CD															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#011H T11 AB:002 DB:--                                     | 						nextM									
#012H T12 AB:000 DB:--                                     | 					fMWrite										
#013H T13 AB:000 DB:00          MREQ                       | 					fMWrite										
#014H T14 AB:000 DB:00          MREQ    WR                 | Memory write to  000 <- 00					fMWrite	nextM									
#015H T15 AB:0FF DB:--                                     | 					fMWrite										
#016H T16 AB:0FF DB:03          MREQ                       | 					fMWrite										
#017H T17 AB:0FF DB:03          MREQ    WR                 | Memory write to  0FF <- 03					fMWrite	nextM;setM1									
#end															
															
#if 	pla[23] && pla[16]		push qq			"5,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C5  M1      MREQ RD                    | Opcode read from 000 -> C5															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM1									
#005H T5  AB:000 DB:--                                     | 						nextM									
#006H T6  AB:002 DB:--                                     | 					fMWrite										
#007H T7  AB:002 DB:02          MREQ                       | 					fMWrite										
#008H T8  AB:002 DB:02          MREQ    WR                 | Memory write to  002 <- 02					fMWrite	nextM									
#009H T9  AB:001 DB:--                                     | 					fMWrite										
#010H T10 AB:001 DB:01          MREQ                       | 					fMWrite										
#011H T11 AB:001 DB:01          MREQ    WR                 | Memory write to  001 <- 01					fMWrite	nextM;setM1									
#end															
															
#if 	pla[23] && !pla[16]		pop qq			"4,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:C1  M1      MREQ RD                    | Opcode read from 000 -> C1															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM;setM1									
#end															
															
#if 	pla[22]		CB without IX/IY			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:CB  M1      MREQ RD                    | Opcode read from 000 -> CB															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
#if 	pla[17] && !(pla[40] || pla[50])		"ld r,n"			"4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:06  M1      MREQ RD                    | Opcode read from 000 -> 06															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM;setM1									
#end															
															
#if 	pla[10]		"ex (sp),hl"			"4,3,4,3,5"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:E3  M1      MREQ RD                    | Opcode read from 000 -> E3															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:0FD DB:--                                     | 					fMRead										
#006H T6  AB:0FD DB:03          MREQ RD                    | Memory read from 0FD -> 03					fMRead										
#007H T7  AB:0FD DB:03          MREQ RD                    | Memory read from 0FD -> 03					fMRead	nextM									
#008H T8  AB:0FE DB:--                                     | 					fMRead										
#009H T9  AB:0FE DB:D1          MREQ RD                    | Memory read from 0FE -> D1					fMRead										
#010H T10 AB:0FE DB:D1          MREQ RD                    | Memory read from 0FE -> D1					fMRead										
#011H T11 AB:0FE DB:--                                     | 						nextM									
#012H T12 AB:0FE DB:--                                     | 					fMWrite										
#013H T13 AB:0FE DB:00          MREQ                       | 					fMWrite										
#014H T14 AB:0FE DB:00          MREQ    WR                 | Memory write to  0FE <- 00					fMWrite	nextM									
#015H T15 AB:0FD DB:--                                     | 					fMWrite										
#016H T16 AB:0FD DB:01          MREQ                       | 					fMWrite										
#017H T17 AB:0FD DB:01          MREQ    WR                 | Memory write to  0FD <- 01					fMWrite										
#018H T18 AB:0FD DB:01                                     | 															
#019H T19 AB:0FD DB:01                                     | 						nextM;setM1									
#end															
															
#if 	pla[9]		inc/dec ss			6									
"// PLA14 is set for decrement and reset for increment. Route that line for SBC/ADC ALU operation to perform a decrement or increment. Since the timings are the same, we use a single PLA entry for both functions."															
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:03  M1      MREQ RD                    | Opcode read from 000 -> 03															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM1									
#005H T5  AB:000 DB:--                                     | 															
#006H T6  AB:000 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[8] && pla[13]		"ld (rr),a"			"4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:02  M1      MREQ RD                    | Opcode read from 000 -> 02															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMWrite										
#006H T6  AB:001 DB:FF          MREQ                       | 					fMWrite										
#007H T7  AB:001 DB:FF          MREQ    WR                 | Memory write to  001 <- FF					fMWrite	nextM;setM1									
#end															
															
#if 	pla[8] && !pla[13]		"ld a,(rr)"			"4,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:0A  M1      MREQ RD                    | Opcode read from 000 -> 0A															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:002 DB:--                                     | 					fMRead										
#006H T6  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#007H T7  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM;setM1									
#end															
															
#if 	pla[7]		"ld rr,nn"			"4,3,3"									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:01  M1      MREQ RD                    | Opcode read from 000 -> 01															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM2									
#005H T5  AB:001 DB:--                                     | 					fMRead										
#006H T6  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead										
#007H T7  AB:001 DB:01          MREQ RD                    | Memory read from 001 -> 01					fMRead	nextM									
#008H T8  AB:002 DB:--                                     | 					fMRead										
#009H T9  AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead										
#010H T10 AB:002 DB:02          MREQ RD                    | Memory read from 002 -> 02					fMRead	nextM;setM1									
#end															
															
#if 	pla[6]		jp hl			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:E9  M1      MREQ RD                    | Opcode read from 000 -> E9															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
#if 	pla[5]		"ld sp,hl"			6									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:F9  M1      MREQ RD                    | Opcode read from 000 -> F9															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000						contM1									
#005H T5  AB:000 DB:--                                     | 															
#006H T6  AB:000 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[3]		IX/IY			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:DD  M1      MREQ RD                    | Opcode read from 000 -> DD															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
#if 	pla[2]		"ex de,hl"			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:EB  M1      MREQ RD                    | Opcode read from 000 -> EB															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
#if 	pla[1]		exx			4									
#001H T1  AB:000 DB:--  M1                                 | 															
#002H T2  AB:000 DB:D9  M1      MREQ RD                    | Opcode read from 000 -> D9															
#003H T3  AB:000 DB:--     RFSH                            | 															
#004H T4  AB:000 DB:--     RFSH MREQ                       | Refresh address  000															
#end															
															
// Instructions with CB-byte prefix															
															
#if 	pla[74]		set			4									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:C0  M1      MREQ RD                    | Opcode read from 001 -> C0															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001															
#end					// TODO: Provides execution signals only at proper ticks. Need to extend it to PLA54 size.										
															
#if 	pla[73]		res			4									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:80  M1      MREQ RD                    | Opcode read from 001 -> 80															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001															
#end					// TODO: Provides execution signals only at proper ticks. Need to extend it to PLA54 size.										
															
#if 	pla[72]		bit			4									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:40  M1      MREQ RD                    | Opcode read from 001 -> 40															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001															
#end					// TODO: Provides execution signals only at proper ticks. Need to extend it to PLA54 size.										
															
#if 	pla[70]		rotate/shift			4									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:00  M1      MREQ RD                    | Opcode read from 001 -> 00															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001															
#end					// TODO: Provides execution signals only at proper ticks. Need to extend it to PLA54 size.										
															
#if 	pla[62]		Every CB without IX/IY			"4,4,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:06  M1      MREQ RD                    | Opcode read from 001 -> 06															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:006 DB:--                                     | 					fMRead										
#010H T6  AB:006 DB:05          MREQ RD                    | Memory read from 006 -> 05					fMRead										
#011H T7  AB:006 DB:05          MREQ RD                    | Memory read from 006 -> 05					fMRead										
#012H T8  AB:006 DB:--                                     | 						nextM									
#013H T9  AB:006 DB:--                                     | 					fMWrite										
#014H T10 AB:006 DB:0A          MREQ                       | 					fMWrite										
#015H T11 AB:006 DB:0A          MREQ    WR                 | Memory write to  006 <- 0A					fMWrite	nextM;setM1									
#end															
															
#if 	pla[54] || pla[49]		Every CB with IX/IY			"4,3,5,4,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:CB  M1      MREQ RD                    | Opcode read from 001 -> CB															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:002 DB:--                                     | 					fMRead										
#010H T6  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#011H T7  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM									
#012H T8  AB:003 DB:--                                     | 					fMRead										
#013H T9  AB:003 DB:00          MREQ RD                    | Memory read from 003 -> 00					fMRead										
#014H T10 AB:003 DB:00          MREQ RD                    | Memory read from 003 -> 00					fMRead										
#015H T11 AB:003 DB:--                                     | 															
#016H T12 AB:003 DB:--                                     | 						nextM									
#017H T13 AB:000 DB:--                                     | 					fMRead										
#018H T14 AB:000 DB:DD          MREQ RD                    | Memory read from 000 -> DD					fMRead										
#019H T15 AB:000 DB:DD          MREQ RD                    | Memory read from 000 -> DD					fMRead										
#020H T16 AB:000 DB:--                                     | 						nextM									
#021H T17 AB:000 DB:--                                     | 					fMWrite										
#022H T18 AB:000 DB:BB          MREQ                       | 					fMWrite										
#023H T19 AB:000 DB:BB          MREQ    WR                 | Memory write to  000 <- BB					fMWrite	nextM;setM1									
#end															
															
															
// Instructions with ED-byte prefix															
															
#if 	pla[96]		im n			4									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:46  M1      MREQ RD                    | Opcode read from 001 -> 46															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001															
#end															
															
#if 	pla[83]		"ld a,i/ld a,r"			5									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:57  M1      MREQ RD                    | Opcode read from 001 -> 57															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM1									
#009H T5  AB:001 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[82]		neg			4									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:44  M1      MREQ RD                    | Opcode read from 001 -> 44															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001															
#end															
															
#if 	pla[68]		"adc/sbc hl,ss"			"4,4,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:42  M1      MREQ RD                    | Opcode read from 001 -> 42															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:001 DB:--                                     | 															
#010H T6  AB:001 DB:--                                     | 															
#011H T7  AB:001 DB:--                                     | 															
#012H T8  AB:001 DB:--                                     | 						nextM									
#013H T9  AB:001 DB:--                                     | 															
#014H T10 AB:001 DB:--                                     | 															
#015H T11 AB:001 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[67]		"in r,(c)"			"4,4"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:40  M1      MREQ RD                    | Opcode read from 001 -> 40															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:0FF DB:--                                     | 															
#010H T6  AB:0FF DB:--               RD    IORQ            | I/O read from 0FF															
#011H T7  AB:0FF DB:--               RD    IORQ            | I/O read from 0FF															
#012H T8  AB:0FF DB:--               RD    IORQ            | I/O read from 0FF						nextM;setM1									
#end															
															
#if 	pla[57]		"ld i,a/ld r,a"			5									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:47  M1      MREQ RD                    | Opcode read from 001 -> 47															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM1									
#009H T5  AB:001 DB:--                                     | 						nextM;setM1									
#end															
															
#if 	pla[46]		reti/retn			"4,3,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:45  M1      MREQ RD                    | Opcode read from 001 -> 45															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:001 DB:--                                     | 					fMRead										
#010H T6  AB:001 DB:45          MREQ RD                    | Memory read from 001 -> 45					fMRead										
#011H T7  AB:001 DB:45          MREQ RD                    | Memory read from 001 -> 45					fMRead	nextM									
#012H T8  AB:002 DB:--                                     | 					fMRead										
#013H T9  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#014H T10 AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM;setM1									
#end															
															
#if 	pla[34]		"out (c),r"			"4,4"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:41  M1      MREQ RD                    | Opcode read from 001 -> 41															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:0FF DB:--                                     | 															
#010H T6  AB:0FF DB:C3                  WR IORQ            | I/O write to 0FF <- C3															
#011H T7  AB:0FF DB:C3                  WR IORQ            | I/O write to 0FF <- C3															
#012H T8  AB:0FF DB:C3                  WR IORQ            | I/O write to 0FF <- C3						nextM;setM1									
#end															
															
#if 	pla[31]		"ld rr,(nn)/(nn),rr"			"4,3,3,3,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:43  M1      MREQ RD                    | Opcode read from 001 -> 43															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:002 DB:--                                     | 					fMRead										
#010H T6  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#011H T7  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM									
#012H T8  AB:003 DB:--                                     | 					fMRead										
#013H T9  AB:003 DB:02          MREQ RD                    | Memory read from 003 -> 02					fMRead										
#014H T10 AB:003 DB:02          MREQ RD                    | Memory read from 003 -> 02					fMRead	nextM									
#015H T11 AB:001 DB:--                                     | 					fMWrite										
#016H T12 AB:001 DB:FF          MREQ                       | 					fMWrite										
#017H T13 AB:001 DB:FF          MREQ    WR                 | Memory write to  001 <- FF					fMWrite	nextM									
#018H T14 AB:002 DB:--                                     | 					fMWrite										
#019H T15 AB:002 DB:C3          MREQ                       | 					fMWrite										
#020H T16 AB:002 DB:C3          MREQ    WR                 | Memory write to  002 <- C3					fMWrite	nextM;setM1									
#end															
															
#if 	pla[21]		inx/inxr			"5,3,4,(5)"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:A2  M1      MREQ RD                    | Opcode read from 001 -> A2															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM1									
#009H T5  AB:001 DB:--                                     | 															
#010H T6  AB:049 DB:--                                     | 						nextM									
#011H T7  AB:049 DB:--               RD    IORQ            | I/O read from 049															
#012H T8  AB:049 DB:--               RD    IORQ            | I/O read from 049															
#013H T9  AB:049 DB:--               RD    IORQ            | I/O read from 049						nextM									
#014H T10 AB:06E DB:--                                     | 					fMWrite										
#015H T11 AB:06E DB:A3          MREQ                       | 					fMWrite										
#016H T12 AB:06E DB:A3          MREQ    WR                 | Memory write to  06E <- A3					fMWrite	nextM;setM1									
						? What is INIR doing when looping or not?									
#end															
															
#if 	pla[20]		outx/otxr			"5,3,4,(5)"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:A3  M1      MREQ RD                    | Opcode read from 001 -> A3															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM1									
#009H T5  AB:001 DB:--                                     | 						nextM									
#010H T6  AB:06F DB:--                                     | 					fMRead										
#011H T7  AB:06F DB:00          MREQ RD                    | Memory read from 06F -> 00					fMRead										
#012H T8  AB:06F DB:00          MREQ RD                    | Memory read from 06F -> 00					fMRead	nextM									
#013H T9  AB:049 DB:--                                     | 															
#014H T10 AB:049 DB:00                  WR IORQ            | I/O write to 049 <- 00															
#015H T11 AB:049 DB:00                  WR IORQ            | I/O write to 049 <- 00															
#016H T12 AB:049 DB:00                  WR IORQ            | I/O write to 049 <- 00						nextM;setM1									
#end															
															
#if 	pla[15]		rrd/rld			"4,3,4,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:67  M1      MREQ RD                    | Opcode read from 001 -> 67															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:000 DB:--                                     | 					fMRead										
#010H T6  AB:000 DB:ED          MREQ RD                    | Memory read from 000 -> ED					fMRead										
#011H T7  AB:000 DB:ED          MREQ RD                    | Memory read from 000 -> ED					fMRead	nextM									
#012H T8  AB:000 DB:--                                     | 															
#013H T9  AB:000 DB:--                                     | 															
#014H T10 AB:000 DB:--                                     | 															
#015H T11 AB:000 DB:--                                     | 						nextM									
#016H T12 AB:000 DB:--                                     | 					fMWrite										
#017H T13 AB:000 DB:EE          MREQ                       | 					fMWrite										
#018H T14 AB:000 DB:EE          MREQ    WR                 | Memory write to  000 <- EE					fMWrite	nextM;setM1									
#end															
															
#if 	pla[12]		ldi/ldir/ldd/lddr			"4,3,5,(5)"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:A0  M1      MREQ RD                    | Opcode read from 001 -> A0															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:06C DB:--                                     | 					fMRead										
#010H T6  AB:06C DB:00          MREQ RD                    | Memory read from 06C -> 00					fMRead										
#011H T7  AB:06C DB:00          MREQ RD                    | Memory read from 06C -> 00					fMRead	nextM									
#012H T8  AB:05B DB:--                                     | 					fMWrite										
#013H T9  AB:05B DB:00          MREQ                       | 					fMWrite										
#014H T10 AB:05B DB:00          MREQ    WR                 | Memory write to  05B <- 00					fMWrite										
#015H T11 AB:05B DB:00                                     | 															
#016H T12 AB:05B DB:00                                     | 						nextM;setM1									
															
															
															
															
						nextM;setM1									
#end															
															
#if 	pla[11]		cpi/cpir/cpd/cpdr			"4,3,5,(5)"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:A1  M1      MREQ RD                    | Opcode read from 001 -> A1															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:06D DB:--                                     | 					fMRead										
#010H T6  AB:06D DB:00          MREQ RD                    | Memory read from 06D -> 00					fMRead										
#011H T7  AB:06D DB:00          MREQ RD                    | Memory read from 06D -> 00					fMRead	nextM									
#012H T8  AB:06D DB:--                                     | 															
#013H T9  AB:06D DB:--                                     | 															
#014H T10 AB:06D DB:--                                     | 															
#015H T11 AB:06D DB:--                                     | 															
#016H T12 AB:06D DB:--                                     | 						nextM;setM1									
															
															
															
															
						nextM;setM1									
#end															
															
// Regular instructions with IX/IY prefix															
															
#if 	pla[49]		CB with IX/IY												
#end															
															
#if 	pla[40]		"ld (ix+d),n"			"4,3,5,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:36  M1      MREQ RD                    | Opcode read from 001 -> 36															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:002 DB:--                                     | 					fMRead										
#010H T6  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#011H T7  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM									
#012H T8  AB:003 DB:--                                     | 					fMRead										
#013H T9  AB:003 DB:02          MREQ RD                    | Memory read from 003 -> 02					fMRead										
#014H T10 AB:003 DB:02          MREQ RD                    | Memory read from 003 -> 02					fMRead										
#015H T11 AB:003 DB:--                                     | 															
#016H T12 AB:003 DB:--                                     | 						nextM									
#017H T13 AB:002 DB:--                                     | 					fMWrite										
#018H T14 AB:002 DB:02          MREQ                       | 					fMWrite										
#019H T15 AB:002 DB:02          MREQ    WR                 | Memory write to  002 <- 02					fMWrite	nextM;setM1									
#end															
															
#if 	pla[102] && !pla[95]		"ld r,(ix+d)"			"4,3,5,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:46  M1      MREQ RD                    | Opcode read from 001 -> 46															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:002 DB:--                                     | 					fMRead										
#010H T6  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#011H T7  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM									
#012H T8  AB:002 DB:--                                     | 															
#013H T9  AB:002 DB:--                                     | 															
#014H T10 AB:002 DB:--                                     | 															
#015H T11 AB:002 DB:--                                     | 															
#016H T12 AB:002 DB:--                                     | 						nextM									
#017H T13 AB:001 DB:--                                     | 					fMRead										
#018H T14 AB:001 DB:46          MREQ RD                    | Memory read from 001 -> 46					fMRead										
#019H T15 AB:001 DB:46          MREQ RD                    | Memory read from 001 -> 46					fMRead	nextM;setM1									
#end															
															
#if 	pla[103] && !pla[95]		"ld (ix+d),r"			"4,3,5,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:70  M1      MREQ RD                    | Opcode read from 001 -> 70															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:002 DB:--                                     | 					fMRead										
#010H T6  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#011H T7  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM									
#012H T8  AB:002 DB:--                                     | 															
#013H T9  AB:002 DB:--                                     | 															
#014H T10 AB:002 DB:--                                     | 															
#015H T11 AB:002 DB:--                                     | 															
#016H T12 AB:002 DB:--                                     | 						nextM									
#017H T13 AB:000 DB:--                                     | 					fMWrite										
#018H T14 AB:000 DB:46          MREQ                       | 					fMWrite										
#019H T15 AB:000 DB:46          MREQ    WR                 | Memory write to  000 <- 46					fMWrite	nextM;setM1									
#end															
															
#if 	pla[104]		add/sub/and/or/xor/cp (ix+d)			"4,3,5,3"									
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:86  M1      MREQ RD                    | Opcode read from 001 -> 86															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:002 DB:--                                     | 					fMRead										
#010H T6  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#011H T7  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM									
#012H T8  AB:002 DB:--                                     | 															
#013H T9  AB:002 DB:--                                     | 															
#014H T10 AB:002 DB:--                                     | 															
#015H T11 AB:002 DB:--                                     | 															
#016H T12 AB:002 DB:--                                     | 						nextM									
#017H T13 AB:000 DB:--                                     | 					fMRead										
#018H T14 AB:000 DB:DD          MREQ RD                    | Memory read from 000 -> DD					fMRead										
#019H T15 AB:000 DB:DD          MREQ RD                    | Memory read from 000 -> DD					fMRead	nextM;setM1									
#end															
															
#if 	pla[105]		inc/dec (ix+d)			"4,3,5,4,3"									
"// PLA75 is set for decrement and reset for increment. Route that line for SBC/ADC ALU operation to perform a decrement or increment. Since the timings are the same, we use a single PLA entry for both functions."															
#005H T1  AB:001 DB:--  M1                                 | 															
#006H T2  AB:001 DB:34  M1      MREQ RD                    | Opcode read from 001 -> 34															
#007H T3  AB:001 DB:--     RFSH                            | 															
#008H T4  AB:001 DB:--     RFSH MREQ                       | Refresh address  001						contM2									
#009H T5  AB:002 DB:--                                     | 					fMRead										
#010H T6  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#011H T7  AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead	nextM									
#012H T8  AB:002 DB:--                                     | 															
#013H T9  AB:002 DB:--                                     | 															
#014H T10 AB:002 DB:--                                     | 															
#015H T11 AB:002 DB:--                                     | 															
#016H T12 AB:002 DB:--                                     | 						nextM									
#017H T13 AB:002 DB:--                                     | 					fMRead										
#018H T14 AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#019H T15 AB:002 DB:01          MREQ RD                    | Memory read from 002 -> 01					fMRead										
#020H T16 AB:002 DB:--                                     | 						nextM									
#021H T17 AB:002 DB:--                                     | 					fMWrite										
#022H T18 AB:002 DB:02          MREQ                       | 					fMWrite										
#023H T19 AB:002 DB:02          MREQ    WR                 | Memory write to  002 <- 02					fMWrite	nextM;setM1									
#end															
															
// ALU entries															
															
#if 	pla[88] && (pla[65] || pla[64] || pla[52] || pla[104])		101 (XOR)												
#end															
															
#if 	pla[86] && (pla[65] || pla[64] || pla[52] || pla[104])		110 (OR)												
#end															
															
#if 	pla[85] && (pla[65] || pla[64] || pla[52] || pla[104])		100 (AND)												
#end															
															
#if 	pla[84] && (pla[65] || pla[64] || pla[52] || pla[104])		000 (ADD)												
#end															
															
#if 	pla[80] && (pla[65] || pla[64] || pla[52] || pla[104])		001 (ADC)												
#end															
															
#if 	pla[79] && (pla[65] || pla[64] || pla[52] || pla[104])		011 (SBC)												
#end															
															
#if 	pla[78] && (pla[65] || pla[64] || pla[52] || pla[104])		010 (SUB)												
#end															
															
#if 	pla[76] && (pla[65] || pla[64] || pla[52] || pla[104])		111 (CP)												
#end															
															
// Individual opcode bits															
															
#if 	pla[101]		opcode[4]												
#end															
															
#if 	pla[100]		opcode[3]												
#end															
															
#if 	pla[99]		opcode[0]												
#end															
															
// Special signals (not instructions)															
															
#if 	pla[91]		"_blockio(20,21)"												
// This signal goes along block IN/OUT instructions.															
#end															
															
#if 	pla[75]		"_dec(53,66,105)"												
"// This signal specifies a decrement operation for PLA 53, 66 and 105. Otherwise, it is an increment."															
#end															
															
#if 	pla[55]		"_cbhl(70,72,73,74)"												
"// This signal specifies (HL) addressing for all CB-table instructions, PLA entries 70, 72, 73, 74."															
#end															
															
#if 	pla[44]		_cb												
// This signal specifies a regular CB opcode (ignoring IX/IY).															
#end															
															
#if 	pla[33]		_store(31)												
// This signal specifies whether the register is being loaded or stored to memory for PLA entry 31.															
#end															
															
#if 	pla[28]		_out(37)												
"// This signal specifies the OUT operation for PLA 37. Otherwise, it is operation."															
#end															
															
#if 	pla[27]		"_io(34,67)"												
// This signal goes along individual IN/OUT instructions in the ED table.															
#end															
															
#if 	pla[16]		_push(23)												
"// This signal specifies a PUSH operation for PLA23. Otherwise, it is a POP operation."															
#end															
															
#if 	pla[14]		_dec(9)												
"// This signal specifies a decrement operation for PLA 9. Otherwise, it is an increment."															
#end															
															
#if 	pla[13]		"_dir(8,30,38)"												
"// This signal specifies whether the value is being loaded or stored for PLA entries 8, 30 and 38."															
#end															
															
#if 	pla[4]		"_useir(57,83)"												
// This signal goes along instructions that access I and R register (PLA 57 and 83).															
#end															
															
#if 	pla[0]		"_break(11,12,20,21)"												
// This signal specifies *not* to repeat block instructions.															
#end															
															
															
// Duplicate PLA entries															
															
#if 	pla[98]		"out (*),a/in a,(*)"												
#end															
															
#if 	pla[94]		ldi/ldir/ldd/lddr												
#end															
															
#if 	pla[93]		cpi/cpir/cpd/cpdr												
#end															
															
#if 	pla[90]		djnz *												
#end															
															
#if 	pla[87]		"ld a,i/ld a,r"												
#end															
															
#if 	pla[71]		rlca/rla/rrca/rra												
#end															
															
#if 	pla[63]		"ld r,*"												
#end															
															
#if 	pla[60]		rrd/rld												
#end															
															
#if 	pla[41]		IX/IY												
#end															
															
#if 	pla[36]		"ld(rr),a/a,(rr)"												
#end															
															
#if 	pla[32]		"ld(rr),a/a,(rr)"												
#end															
															
#if 	pla[19]		cpi/cpir/cpd/cpdr												
#end															
															
#if 	pla[18]		ldi/ldir/ldd/lddr												
#end															
															
// Reserved PLA entries for future use															
															
#if 	pla[106]		reserved1												
#end															
															
#if 	pla[107]		reserved2												
#end															
